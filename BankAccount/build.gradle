buildscript {
    dependencies {
        classpath "org.flywaydb:flyway-mysql:8.2.2"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "9.4.0"
}

group = 'com.qreitos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //flyway
    implementation "org.flywaydb:flyway-sqlserver"
    implementation "org.flywaydb:flyway-mysql"
    implementation 'org.flywaydb:flyway-mysql:9.4.0'
    implementation "org.flywaydb:flyway-core:9.4.0"
    //retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //dotenv
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    //springBoot
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework:spring-web:5.3.23'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //mysql
    implementation 'mysql:mysql-connector-java:8.0.30'
    //security
    implementation 'org.springframework.security:spring-security-web:5.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-core:5.7.3'
    testImplementation 'org.springframework.security:spring-security-test:5.7.3'
    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.7.4'
    //jwt
    implementation 'com.auth0:java-jwt:4.0.0'
    //testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
    testImplementation 'com.h2database:h2:2.1.214'
}

tasks.named('test') {
    useJUnitPlatform()
}

//flyway
def props = new Properties()
file(".env").withInputStream { props.load(it) }
flyway {
    driver = 'com.mysql.cj.jdbc.Driver'
    url = props.getProperty("DB_URL")
    user = props.getProperty("DB_USERNAME")
    password = props.getProperty("DB_PASSWORD")
    schemas = 'TribesHistory'
    cleanDisabled = false
}
